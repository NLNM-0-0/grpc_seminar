version: "3.7"

services:
  product:
    build:
      context: .
      dockerfile: product/deploy/app.dockerfile
    depends_on:
      product_db:
        condition: service_healthy
    environment:
      GO_ENV: dev
      GO_PORT: 50051
      DB_HOST: product_db
      DB_PORT: 3306
      DB_DATABASE: product_db
      DB_USERNAME: root
      DB_PASSWORD: 123456
    ports:
      - "50051:50051"
    networks:
      - grpc-seminar-network
    restart: on-failure

  user:
    build:
      context: .
      dockerfile: user/deploy/app.dockerfile
    depends_on:
      user_db:
        condition: service_healthy
    expose:
      - "50091"
    networks:
      - grpc-seminar-network
    restart: on-failure

  order:
    build:
      context: .
      dockerfile: order/deploy/app.dockerfile
    depends_on:
      order_db:
        condition: service_healthy
    environment:
      GO_ENV: dev
      GO_PORT: 50061
      DB_HOST: order_db
      DB_PORT: 3306
      DB_DATABASE: order_db
      DB_USERNAME: root
      DB_PASSWORD: 123456
      PRODUCT_SERVICE_ENDPOINT: product:50051
      USER_SERVICE_ENDPOINT: user:50091
    expose:
      - "50061"
    networks:
      - grpc-seminar-network
    restart: on-failure

  gateway:
    build:
      context: .
      dockerfile: gateway/deploy/app.dockerfile
    depends_on:
      - product
      - user
      - order
    environment:
      GO_ENV: dev
      GO_PORT: 8080
      PRODUCT_SERVICE_ENDPOINT: product:50051
      USER_SERVICE_ENDPOINT: user:50091
      ORDER_SERVICE_ENDPOINT: order:50061
    ports:
      - "8080:8080"
    networks:
      - grpc-seminar-network
    restart: on-failure

  product_db:
    build:
      context: .
      dockerfile: product/deploy/db.dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: product_db
    ports:
      - "3307:3306"
    networks:
      - grpc-seminar-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "user_db", "-u", "root", "-p$${MYSQL_ROOT_PASSWORD}" ]
      timeout: 20s
      retries: 10

  user_db:
    build:
      context: .
      dockerfile: user/deploy/db.dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: user_db
    networks:
      - grpc-seminar-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "user_db", "-u", "root", "-p$${MYSQL_ROOT_PASSWORD}" ]
      timeout: 20s
      retries: 10

  order_db:
    build:
      context: .
      dockerfile: order/deploy/db.dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: order_db
    networks:
      - grpc-seminar-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "user_db", "-u", "root", "-p$${MYSQL_ROOT_PASSWORD}" ]
      timeout: 20s
      retries: 10

networks:
  grpc-seminar-network:
    driver: bridge